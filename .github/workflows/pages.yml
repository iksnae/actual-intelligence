name: Deploy to GitHub Pages

on:
  # Run after successful build
  workflow_run:
    workflows: ["Build and Release Book"]
    types:
      - completed
    branches: [main]
  # Allow manual deployment
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    # Only run on successful builds
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Download build artifacts
        uses: dawidd6/action-download-artifact@v2
        if: github.event_name != 'workflow_dispatch'
        with:
          workflow: build.yml
          name: book-builds
          path: build

      - name: Build locally if manually triggered
        if: github.event_name == 'workflow_dispatch'
        run: |
          # If we're triggered manually, run the build.sh script to generate the files
          bash ./build.sh

      - name: Prepare files for deployment
        run: |
          # Create directory structure for pages
          mkdir -p pages
          mkdir -p pages/es
          
          # Copy HTML files to the correct locations
          cp build/en/Actual.Intelligence-en.html pages/index.html
          cp build/es/Actual.Intelligence-es.html pages/es/index.html
          
          # Copy any image directories needed for HTML files
          cp -r build/en/images pages/ || true
          cp -r build/en/media pages/ || true
          cp -r build/es/images pages/es/ || true
          cp -r build/es/media pages/es/ || true
          
          # Create a .nojekyll file to disable Jekyll processing
          touch pages/.nojekyll
          
          # List out what we're deploying
          echo "Files to be deployed:"
          find pages -type f | sort
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'pages'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3 